// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  username  String      @unique
  password  String
  rooms     UserRoom[]  @relation("UserRooms")
  messages  Message[]
  devices   UserDevice[]
}

model UserDevice {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  token     String   @unique
  platform  String
  createdAt DateTime @default(now())
}

model Room {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String      @unique
  isPublic    Boolean     @default(true)
  updatedAt   DateTime    @updatedAt
  messages    Message[]
  participants UserRoom[] @relation("RoomUsers")
}

model UserRoom {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation("UserRooms", fields: [userId], references: [id])
  userId    String   @db.ObjectId
  room      Room     @relation("RoomUsers", fields: [roomId], references: [id])
  roomId    String   @db.ObjectId
  joinedAt  DateTime @default(now())
  leftAt    DateTime?           // null ise hâlâ odada
  muted    Boolean  @default(false)
  @@unique([userId, roomId])
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String   @db.ObjectId
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  text      String
  createdAt DateTime @default(now())
  readBy    String[]  @default([]) 
}
